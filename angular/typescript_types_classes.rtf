{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 var myNum: number = 5;\
var myString: string = "Hello Universe";\
var myArr: Array<number> = [1,2,3,4];\
var myObj: any = \{ name:'Bill'\};\
var anythingVariable: any = "Hey";\
anythingVariable = 25; \
var arrayOne: Array<boolean> = [true, false, true, true]; \
var arrayTwo: Array<any> = [1, 'abc', true, 2];\
myObj = \{ x: 5, y: 10 \};\
\
\
interface NodeInterface \{\
    \
\}\
\
class MyNode \{\
    val: number;\
    _priv?: number;\
    constructor(value: number) \{\
        this.val = value;\
    \}\
    doSomething() \{\
        this._priv = 10;\
    \};\
\};\
\
var myNodeInstance = new MyNode(1);\
\
console.log(myNodeInstance.val);\
\
function myFunction(message: string) \{\
    console.log(message);\
    return;\
\}\
\
function sendingErrors(): never\{\
	throw new Error('Error message');\
\}\
myFunction(myString);}